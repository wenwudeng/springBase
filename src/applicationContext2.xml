<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<!--    &lt;!&ndash;1、手动方式实现aop&ndash;&gt;

    &lt;!&ndash;声明业务对象&ndash;&gt;
    <bean name="s" class="aop.service.ProductService"/>

    &lt;!&ndash;声明日志切面&ndash;&gt;
    <bean id="loggerAspect" class="aop.aspect.LoggerAspect"/>

    &lt;!&ndash;编织核心业务功能与辅助功能&ndash;&gt;
    <aop:config>

        &lt;!&ndash;指定核心业务功能&ndash;&gt;
        <aop:pointcut id="loggerCutpoint"
                      expression="execution(* aop.service.ProductService.*(..))"/>
        &lt;!&ndash;aop.service.ProductService.* 表示以-aop.service.ProductService.* 开头的任意类方法&ndash;&gt;
        &lt;!&ndash;(..)参数任意数量和类型&ndash;&gt;

        &lt;!&ndash;指定辅助功能&ndash;&gt;
        &lt;!&ndash;然后通过aop：config把业务对象与辅助功能编织在一起&ndash;&gt;
        <aop:aspect id="logAspect" ref="loggerAspect">
            <aop:around pointcut-ref="loggerCutpoint" method="log"/>
        </aop:aspect>
    </aop:config>-->

    <!--2、注解方式实现AOP-->
    <!--对以下包进行扫描,定位业务类和切面类-->
    <context:component-scan base-package="aop.aspect"/>
    <context:component-scan base-package="aop.service"/>

    <!--扫描到注解了的切面类，进行切面配置-->
    <aop:aspectj-autoproxy/>

</beans>